.SVGfilterEffectContainer {
    display: none;
}

.windowBase {
    position: absolute;
    top: 0;
    left: 0;
    width: 0;
    height: 0;
    /* width: 10px;
    height: 10px;
    background-color: red;
        */
    /* debug config */
    overflow: visible;
}

.windowBaseDragHandle {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    cursor: move;

    background: repeating-linear-gradient(0deg, #3b3b3c 0px, #3b3b3c 1px, transparent 1px, transparent 100px),
        repeating-linear-gradient(90deg, #3b3b3c 0px, #3b3b3c 1px, transparent 1px, transparent 100px);
    filter: url(#SVGfilterEffect-windowBaseDragHandle);
}

.windowLocator,
.windowRotateBase {
    position: absolute;
    top: 0;
    left: 0;
    display: inline-block;
    overflow: visible;
    transform-origin: left top;
}

.window {
    position: absolute;
    left: 0;
    top: 0;
    resize: both;
    min-height: 60px;
    min-width: 120px;
    border-radius: 10px;
    background-color: #282a2d;
    border: 3px solid #4e4e4f;
    overflow: hidden;
    cursor: crosshair;
    transform-origin: left top;
    transition: all .5s cubic-bezier(0.1, 1, 0.6, 1);
}

.windowContainer {
    position: absolute;
    background: transparent;
    top: 30px;
    left: 0;
    width: 100%;
    height: calc(100% - 30px);
}

.nav {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 30px;
    background-color: #4e4e4f;
}

.windowDragBox {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    height: 100%;
    width: calc(100% - 60px);
    cursor: move;
}

.closeButton {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    right: 0;
    top: 0;
    width: 30px;
    height: 30px;
    background-color: #4e4e4fa1;
    cursor: pointer;
    -webkit-backdrop-filter: blur(1.5px);
    backdrop-filter: blur(1.5px);
}

.maximizeButton {
    position: absolute;
    right: 30px;
    top: 0;
    width: 30px;
    height: 30px;
    background-color: #4e4e4fa1;
    cursor: pointer;
    -webkit-backdrop-filter: blur(1.5px);
    backdrop-filter: blur(1.5px);
}

.maximizedWindow {
    position: absolute;
    /* left: 0;
    top: 0;
    width: 100%;
    height: 100%; 这是以前最大化用fixed实现留下的遗物，为了向动画妥协，用了absolute+js计算视口位置*/
    resize: none;
    border: 0px solid #4e4e4f;
    border-radius: 0px;
    background-color: #282a2d;
    overflow: hidden;
    cursor: crosshair;
    transition: all .5s cubic-bezier(0.1, 1, 0.6, 1);
}

.maximizedWindow .nav .windowDragBox {
    top: -100%;
    cursor: no-drop;
}

.maximizedWindow .nav .closeButton {
    right: -30px;
    cursor: no-drop;
}

.maximizedWindow .nav .maximizeButton {
    right: 0;
}

.windowIcon {
    position: absolute;
    display: none;
    top: 3px;
    left: 3px;
    width: 24px;
    height: 24px;
}

.windowCover {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;/*现在可以在窗口被遮盖时直接与之交互，并且会自动置顶窗口，得益于上次的点击检测模型大改，现在实现这个功能就是加一个cover禁交互就行>w< 2025.9.25 YCH*/
    -webkit-backdrop-filter: blur(1.5px);
    backdrop-filter: blur(1.5px);
    transition: opacity .15s cubic-bezier(0.1, 1, 0.6, 1);
    background: repeating-linear-gradient(45deg, rgba(0, 0, 0, 0.2) 0px, rgba(0, 0, 0, 0.2) 10px, transparent 10px, transparent 20px);
}

.window::-webkit-resizer {
    background-color: #4e4e4fa1;
}

.windowTitle {
    position: absolute;
    top: 0;
    height: 30px;
    text-align: center;
    line-height: 30px;
    color: #acafb4;
}

.window .nav .windowTitle {
    left: 30px;
    transform: translateX(0);
}

.maximizedWindow .nav .windowTitle {
    left: calc(50%);
    transform: translateX(-50%);
}

.closeButton,
.maximizeButton,
.windowTitle{
    transition: all .5s cubic-bezier(0.3, 0, 0, 1) .25s;
}

.maximizeButton img {
    filter: brightness(0.65);
    transition: transform .15s cubic-bezier(0.1, 1, 0.6, 1),
        filter .3s cubic-bezier(0.1, 1, 0.6, 1) .12s,
        left .5s cubic-bezier(0.3, 0, 0, 1) .25s,
        right .5s cubic-bezier(0.3, 0, 0, 1) .25s,
        top .5s cubic-bezier(0.3, 0, 0, 1) .25s,
        bottom .5s cubic-bezier(0.3, 0, 0, 1) .25s;
}

.closeButtonIcon {
    filter: brightness(0.65);
    transition: transform .15s cubic-bezier(0.1, 1, 0.6, 1),
    filter .3s cubic-bezier(0.1, 1, 0.6, 1) .12s,
    rotate .5s cubic-bezier(0.3, 0, 0, 1) .25s;
}

.maximizedWindow .nav .closeButton .closeButtonIcon{
    rotate: 90deg;
}

.closeButton:hover .closeButtonIcon {
    filter: brightness(3);
    transform: rotate(90deg);
}

.maximizeButtonIcon2 {
    rotate: 180deg;
}

.maximizeButton img {
    position: absolute;
}

.window .nav .maximizeButton .maximizeButtonIcon1 {
    left: 14.5px;
    top: 14.5px;
}

.maximizedWindow .nav .maximizeButton .maximizeButtonIcon1 {
    left: 3.5px;
    top: 3.5px;
}

.window .nav .maximizeButton .maximizeButtonIcon2 {
    right: 14.5px;
    bottom: 14.5px;
}

.maximizedWindow .nav .maximizeButton .maximizeButtonIcon2 {
    right: 3.5px;
    bottom: 3.5px;
}

.window .nav .maximizeButton:hover .maximizeButtonIcon1,
.maximizedWindow .nav .maximizeButton:hover .maximizeButtonIcon1,
.window .nav .maximizeButton:hover .maximizeButtonIcon2,
.maximizedWindow .nav .maximizeButton:hover .maximizeButtonIcon2 {
    filter: brightness(3);
    transform: translate(1px, 1px);
}
